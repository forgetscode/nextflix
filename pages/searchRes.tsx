import Head from 'next/head'
import { useRouter } from 'next/router'
import React, { createContext, useEffect, useState } from 'react'
import { useRecoilValue } from 'recoil'
import { modalState, searchState } from '../atoms/modalAtom'
import Header from '../components/Header'
import Modal from '../components/Modal'
import Row from '../components/Row'
import useAuth from '../hooks/useAuth'
import { Movie } from '../typings'

function SearchRes() {

    const router = useRouter()

    const [initialLoading, setInitialLoading] = useState(true)
    const [emptyMovieData, setEmptyMovieData] = useState(true)
    const [emptyTvData, setEmptyTvData] = useState(true)
    const [movies, setMovies] = useState<Movie[]>()
    const [series, setSeries] = useState<Movie[]>()
    const { logout, loading } = useAuth()
    const showModal = useRecoilValue(modalState)

    useEffect(() => {
        if(!router.isReady) return;
        console.log(router.query.title)
        async function fetchMovie() {
            const dataMovie = await fetch(
                `https://api.themoviedb.org/3/search/movie?api_key=${
                  process.env.NEXT_PUBLIC_API_KEY
                }&language=en-US&query=${router.query.title}&page=1&include_adult=false`
              ).then((response) => response.json())
            const dataTv = await fetch(
                `https://api.themoviedb.org/3/search/tv?api_key=${
                  process.env.NEXT_PUBLIC_API_KEY
                }&language=en-US&query=${router.query.title}&page=1&include_adult=false`
              ).then((res) => res.json())
            if (dataMovie.results.length != 0){
              setMovies(dataMovie.results)
              setEmptyMovieData(false)
            } 
            else{
              setEmptyMovieData(true)
            }
            if (dataTv.results.length != 0){
              setSeries(dataTv.results)
              setEmptyTvData(false)
            } 
            else{
              setEmptyTvData(true)
            }
            setInitialLoading(false)
        }
        fetchMovie()
    }, [router.query, emptyMovieData, emptyTvData])


    if (!initialLoading) {
        return (
        <div className='relative h-screen bg-gradient-to-b from-gray-900/10
        to-[#010511] lg:h-[140vh] disable-scroll'>
          <Head>
            <title>Nextflix</title>
            <link rel='icon' href="https://www.svgrepo.com/show/423205/muffin.svg"/>
            <meta name="description" content="Generated by create next app" />
          </Head>
          <Header/>
          <main className='relative pl-4 pb-24 lg:space-y-24 lg:pl-16 mt-24'>
            <section className='md:space-y-24'>
                <h1 className="text-2xl font-bold md:text-3xl text-shadow-md">
                    Search results for {JSON.stringify(router.query.title).replaceAll("%20", " ")}...
                </h1>
                {!emptyMovieData ? <Row title="Movies" movies={movies} />: <p>No results</p>}
                {!emptyTvData ? <Row title="Series" movies={series} />: <p></p>}
            </section>
          </main>
            {showModal && <Modal />}
        </div>
      )}

}

export default SearchRes
  